// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  email        String   @unique
  hash         String?
  displayName  String   @unique
  imageUrl     String?
  googleSecret String?
  qrcode       String?
  // add path of the image

  socketId       String?   @unique
  blockedUserIds Int[]
  friends        Int[]
  matching       Matching?

  inGame    Boolean @default(false)
  score     Int     @default(0)
  gameId    Int?
  side      Int?
  victories Int     @default(0)
  paddleY   Float   @default(0.5)
  watching  Int     @default(-1)

  log Boolean @default(true)

  @@map("users")
}

model Channel {
  id           Int         @id @default(autoincrement())
  name         String      @default("unknown channel")
  mode         ChannelMode @default(PUBLIC)
  password     String      @default("")
  ownerId      Int         @default(0)
  adminIds     Int[]
  banedUserIds Int[]
  messageIds   Int[]
  userIds      Int[]
  muteUserIds  Int[]
  muteRelease  DateTime[]
}

model Message {
  id       Int      @id @default(autoincrement())
  text     String?
  authorId Int //one  to many field
  date     DateTime @default(now())
}

enum ChannelMode {
  PUBLIC //everybody can join, but there may be a password. No password => password = ''
  DIRECT //direct messages between two users
  PRIVATE //new users must be invited by channel users (not clear in the subject)
}

model Matching {
  user   User @relation(fields: [userId], references: [id])
  userId Int  @unique
}

model Game {
  id      Int   @id @default(autoincrement())
  players Int[]
}
